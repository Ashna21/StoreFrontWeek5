//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace StoreFront.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class StoreFrontEntities : DbContext
    {
        public StoreFrontEntities()
            : base("name=StoreFrontEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<C__MigrationHistory> C__MigrationHistory { get; set; }
        public virtual DbSet<Address> Addresses { get; set; }
        public virtual DbSet<blog> blogs { get; set; }
        public virtual DbSet<CustomerBaseViewModel> CustomerBaseViewModels { get; set; }
        public virtual DbSet<OrderProduct> OrderProducts { get; set; }
        public virtual DbSet<Order> Orders { get; set; }
        public virtual DbSet<Product> Products { get; set; }
        public virtual DbSet<ShoppingCart> ShoppingCarts { get; set; }
        public virtual DbSet<ShoppingCartProduct> ShoppingCartProducts { get; set; }
        public virtual DbSet<State> States { get; set; }
        public virtual DbSet<Status> Status { get; set; }
        public virtual DbSet<User> Users { get; set; }
    
        public virtual int spAddPicture()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spAddPicture");
        }
    
        public virtual int spAddProduct(string productName, string description, Nullable<bool> isPublished, Nullable<decimal> price)
        {
            var productNameParameter = productName != null ?
                new ObjectParameter("productName", productName) :
                new ObjectParameter("productName", typeof(string));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            var isPublishedParameter = isPublished.HasValue ?
                new ObjectParameter("IsPublished", isPublished) :
                new ObjectParameter("IsPublished", typeof(bool));
    
            var priceParameter = price.HasValue ?
                new ObjectParameter("Price", price) :
                new ObjectParameter("Price", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spAddProduct", productNameParameter, descriptionParameter, isPublishedParameter, priceParameter);
        }
    
        public virtual int spAddProductName()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spAddProductName");
        }
    
        public virtual ObjectResult<spAddShoppingCartItem_Result> spAddShoppingCartItem(Nullable<int> productID, Nullable<int> userID)
        {
            var productIDParameter = productID.HasValue ?
                new ObjectParameter("ProductID", productID) :
                new ObjectParameter("ProductID", typeof(int));
    
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spAddShoppingCartItem_Result>("spAddShoppingCartItem", productIDParameter, userIDParameter);
        }
    
        public virtual int spAddUser(string userName, string emailAddress)
        {
            var userNameParameter = userName != null ?
                new ObjectParameter("UserName", userName) :
                new ObjectParameter("UserName", typeof(string));
    
            var emailAddressParameter = emailAddress != null ?
                new ObjectParameter("EmailAddress", emailAddress) :
                new ObjectParameter("EmailAddress", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spAddUser", userNameParameter, emailAddressParameter);
        }
    
        public virtual int spDeleteOrder(Nullable<int> orderID)
        {
            var orderIDParameter = orderID.HasValue ?
                new ObjectParameter("OrderID", orderID) :
                new ObjectParameter("OrderID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spDeleteOrder", orderIDParameter);
        }
    
        public virtual int spDeleteProduct(Nullable<int> productID)
        {
            var productIDParameter = productID.HasValue ?
                new ObjectParameter("ProductID", productID) :
                new ObjectParameter("ProductID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spDeleteProduct", productIDParameter);
        }
    
        public virtual int spDeleteUser(Nullable<int> userID)
        {
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spDeleteUser", userIDParameter);
        }
    
        public virtual ObjectResult<spGetOneProduct_Result> spGetOneProduct(Nullable<int> productID)
        {
            var productIDParameter = productID.HasValue ?
                new ObjectParameter("ProductID", productID) :
                new ObjectParameter("ProductID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spGetOneProduct_Result>("spGetOneProduct", productIDParameter);
        }
    
        public virtual ObjectResult<spGetOneUser_Result> spGetOneUser(Nullable<int> userID)
        {
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spGetOneUser_Result>("spGetOneUser", userIDParameter);
        }
    
        public virtual ObjectResult<spGetOrderProducts_Result> spGetOrderProducts(Nullable<int> orderID)
        {
            var orderIDParameter = orderID.HasValue ?
                new ObjectParameter("OrderID", orderID) :
                new ObjectParameter("OrderID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spGetOrderProducts_Result>("spGetOrderProducts", orderIDParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> spGetOrders()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("spGetOrders");
        }
    
        public virtual ObjectResult<spGetProducts_Result> spGetProducts(Nullable<bool> publishedOnly)
        {
            var publishedOnlyParameter = publishedOnly.HasValue ?
                new ObjectParameter("PublishedOnly", publishedOnly) :
                new ObjectParameter("PublishedOnly", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spGetProducts_Result>("spGetProducts", publishedOnlyParameter);
        }
    
        public virtual ObjectResult<spGetProductsAll_Result> spGetProductsAll()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spGetProductsAll_Result>("spGetProductsAll");
        }
    
        public virtual ObjectResult<spGetShoppingCart_Result> spGetShoppingCart(Nullable<int> userID)
        {
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spGetShoppingCart_Result>("spGetShoppingCart", userIDParameter);
        }
    
        public virtual ObjectResult<spGetShoppingCartItems_Result> spGetShoppingCartItems(Nullable<int> shoppingCartID)
        {
            var shoppingCartIDParameter = shoppingCartID.HasValue ?
                new ObjectParameter("ShoppingCartID", shoppingCartID) :
                new ObjectParameter("ShoppingCartID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spGetShoppingCartItems_Result>("spGetShoppingCartItems", shoppingCartIDParameter);
        }
    
        public virtual ObjectResult<spGetUserAddreses_Result> spGetUserAddreses(Nullable<int> userID)
        {
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spGetUserAddreses_Result>("spGetUserAddreses", userIDParameter);
        }
    
        public virtual ObjectResult<spGetUsers_Result> spGetUsers()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spGetUsers_Result>("spGetUsers");
        }
    
        public virtual int spUpdateProduct(Nullable<int> productID, string productName, string description, Nullable<bool> isPublished, Nullable<decimal> price)
        {
            var productIDParameter = productID.HasValue ?
                new ObjectParameter("ProductID", productID) :
                new ObjectParameter("ProductID", typeof(int));
    
            var productNameParameter = productName != null ?
                new ObjectParameter("ProductName", productName) :
                new ObjectParameter("ProductName", typeof(string));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            var isPublishedParameter = isPublished.HasValue ?
                new ObjectParameter("IsPublished", isPublished) :
                new ObjectParameter("IsPublished", typeof(bool));
    
            var priceParameter = price.HasValue ?
                new ObjectParameter("Price", price) :
                new ObjectParameter("Price", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spUpdateProduct", productIDParameter, productNameParameter, descriptionParameter, isPublishedParameter, priceParameter);
        }
    
        public virtual int spUpdateUser(Nullable<int> userID, string userName, string emailAddress)
        {
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(int));
    
            var userNameParameter = userName != null ?
                new ObjectParameter("UserName", userName) :
                new ObjectParameter("UserName", typeof(string));
    
            var emailAddressParameter = emailAddress != null ?
                new ObjectParameter("EmailAddress", emailAddress) :
                new ObjectParameter("EmailAddress", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spUpdateUser", userIDParameter, userNameParameter, emailAddressParameter);
        }
    }
}
